# WorkPartner 编码标准

## C# 编码规范
### 命名约定
- 使用PascalCase命名类、方法、属性
- 使用camelCase命名局部变量和参数
- 使用UPPER_CASE命名常量
- 接口名称以"I"开头

### 代码组织
- 每个类一个文件
- 使用适当的命名空间组织代码
- 按功能分组相关类和方法
- 保持方法的单一职责原则

## 异常处理
### 异常类型
- 使用自定义异常 `WorkPartnerException` 处理业务逻辑错误
- 捕获并记录所有异常
- 提供有意义的错误消息和上下文信息

### 日志记录
- 使用Serilog进行结构化日志记录
- 记录关键操作的开始和结束
- 记录错误详情和堆栈跟踪
- 监控内存使用情况

## 数据处理
### Excel处理
- 验证输入文件的存在性和格式
- 使用适当的容差值进行浮点数比较
- 批量处理时提供进度反馈
- 保存处理结果和错误报告

### 性能优化
- 避免重复读取文件
- 使用适当的数据结构
- 监控内存使用
- 提供处理进度信息

## 配置管理
### 配置文件
- 使用appsettings.json进行配置
- 支持命令行参数覆盖配置
- 验证配置参数的有效性
- 提供默认配置值

### 环境配置
- 支持开发、测试、生产环境
- 使用环境变量进行敏感信息配置
- 提供配置验证和错误提示
description:
globs:
alwaysApply: true
---
